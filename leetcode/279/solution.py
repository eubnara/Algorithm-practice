class Solution:

    def numSquares(self, n: int) -> int:

        squares = [1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024, 1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936, 2025, 2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136, 3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096, 4225, 4356, 4489, 4624, 4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400, 6561, 6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464, 8649, 8836, 9025, 9216, 9409, 9604, 9801, 10000]
        answer = {1: 1, 4: 1, 9: 1, 16: 1, 25: 1, 36: 1, 49: 1, 64: 1, 81: 1, 100: 1, 121: 1, 144: 1, 169: 1, 196: 1, 225: 1, 256: 1, 289: 1, 324: 1, 361: 1, 400: 1, 441: 1, 484: 1, 529: 1, 576: 1, 625: 1, 676: 1, 729: 1, 784: 1, 841: 1, 900: 1, 961: 1, 1024: 1, 1089: 1, 1156: 1, 1225: 1, 1296: 1, 1369: 1, 1444: 1, 1521: 1, 1600: 1, 1681: 1, 1764: 1, 1849: 1, 1936: 1, 2025: 1, 2116: 1, 2209: 1, 2304: 1, 2401: 1, 2500: 1, 2601: 1, 2704: 1, 2809: 1, 2916: 1, 3025: 1, 3136: 1, 3249: 1, 3364: 1, 3481: 1, 3600: 1, 3721: 1, 3844: 1, 3969: 1, 4096: 1, 4225: 1, 4356: 1, 4489: 1, 4624: 1, 4761: 1, 4900: 1, 5041: 1, 5184: 1, 5329: 1, 5476: 1, 5625: 1, 5776: 1, 5929: 1, 6084: 1, 6241: 1, 6400: 1, 6561: 1, 6724: 1, 6889: 1, 7056: 1, 7225: 1, 7396: 1, 7569: 1, 7744: 1, 7921: 1, 8100: 1, 8281: 1, 8464: 1, 8649: 1, 8836: 1, 9025: 1, 9216: 1, 9409: 1, 9604: 1, 9801: 1, 10000: 1}

        cur = squares
        if n in answer:
            return answer[n]

        while len(cur) > 0:
            prev = cur
            cur = []
            for i in prev:
                if i > n:
                    continue
                for s in squares:
                    if i + s > n:
                        break
                    if (i + s) not in answer or answer[i + s] > answer[i] + 1:
                        answer[i + s] = answer[i] + 1
                        cur.append(i + s)
        return answer[n]


s = Solution()
print(s.numSquares(12))
print(s.numSquares(14))
